name: 'golangUnittest'
description: |
  Run go unit tests on your project. The tests are running with the `--tags=unit` parameter. The test result will be stored as artifacts.
  All internal dependencies are cloned via HTTPS, instead of Git-SSH.

  Before the build process the Job will call the `pre_test.sh` script, located in the `CICD_DIR` with `PARAM_PRESCRIPT`. If the file not exist, nothing will happen.
  After the build process the Job will call the `post_test.sh` script, located in the `CICD_DIR` with `POST_PRESCRIPT`. If the file not exist, nothing will happen.
author: 'Tim Rutte <info@timrutte.de>'
inputs:
  CICD_DIR:
    description: "Default CI/CD directory, used for special files like pre_deployment-scripts"
    default: ".cicd"
    required: true
  PARAM_PRESCRIPT:
    description: "Parameter for pre_test.sh"
    default: ""
    required: false
  PARAM_POSTSCRIPT:
    description: "Parameter for post_test.sh"
    default: ""
    required: false

  CI_JOB_TOKEN:
    description: "Token used for authentication against CI_SERVER_HOST"
    default: "${{ github.token }}"
    required: true
  CI_SERVER_HOST:
    description: "Server host, e.g. github.com"
    default: "github.com"
    required: true
  
runs:
  using: "composite"
  steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Install golang
      uses: actions/setup-go@v3

    - name: Set GOPATH
      shell: bash
      run: |
        echo $HOME/go >> $GITHUB_PATH
        echo $HOME/go/bin >> $GITHUB_PATH

    - name: Set git insteadOf rules
      shell: bash
      run: |
        git config --global --add url."https://${{ inputs.CI_JOB_TOKEN }}@${{ inputs.CI_SERVER_HOST }}/".insteadOf "ssh://git@${{ inputs.CI_SERVER_HOST }}/"
        git config --global --add url."https://${{ inputs.CI_JOB_TOKEN }}@${{ inputs.CI_SERVER_HOST }}/".insteadOf "ssh://${{ inputs.CI_SERVER_HOST }}/"
        git config --global --add url."https://${{ inputs.CI_JOB_TOKEN }}@${{ inputs.CI_SERVER_HOST }}/".insteadOf "git://${{ inputs.CI_SERVER_HOST }}/"
        git config --global --add url."https://${{ inputs.CI_JOB_TOKEN }}@${{ inputs.CI_SERVER_HOST }}/".insteadOf "https://${{ inputs.CI_SERVER_HOST }}/"

    - name: Run
      shell: bash
      run: |
        if test -f "${{ inputs.CICD_DIR }}/pre_test.sh"; then bash "${{ inputs.CICD_DIR }}/pre_test.sh" ${{ inputs.PARAM_PRESCRIPT }}; fi
        go install gotest.tools/gotestsum@latest
        go install github.com/t-yuki/gocover-cobertura@latest
        gotestsum --junitfile junitReport.xml --format testname -- --tags=unit -v -coverprofile=testCoverage.txt ./...
        gocover-cobertura < testCoverage.txt > unittestCoverage.xml
        sed -i "s;filename=\"$(grep "^module" go.mod | cut -d ' ' -f2)/;filename=\";g" unittestCoverage.xml
        if test -f "${{ inputs.CICD_DIR }}/post_test.sh"; then bash "${{ inputs.CICD_DIR }}/post_test.sh" ${{ inputs.PARAM_POSTSCRIPT }}; fi

    - name: Remove git insteadOf rules
      shell: bash
      run: git config --global --remove-section url."https://${{ inputs.CI_JOB_TOKEN }}@${{ inputs.CI_SERVER_HOST }}/"

    - uses: actions/upload-artifact@v3  
      if: success() || failure()    
      with:
        name: artifact-results
        path: |
          unittestCoverage.xml
          junitReport.xml
